# Kind Cluster Configuration for Destination Cluster
# This file defines a local Kubernetes cluster using Kind (Kubernetes in Docker)
# The cluster will be used as the destination for Crane migration

# Cluster API version for Kind
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4

# Name of the cluster - used to identify it in kubectl contexts
name: destination-cluster

# Node definitions - each node is a Docker container running Kubernetes components
nodes:
# Control plane node - runs the Kubernetes API server, scheduler, and controller manager
- role: control-plane
  # Custom kubeadm configuration patches
  kubeadmConfigPatches:
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        # Label for ingress controller compatibility
        node-labels: "ingress-ready=true"
  
  # Port mappings to expose services from the cluster to your host machine
  # Note: Using port 8081 to avoid conflict with source cluster (8080)
  extraPortMappings:
  - containerPort: 80    # Port inside the container
    hostPort: 8081       # Port on your host machine (accessible via localhost:8081)
    protocol: TCP

# Worker nodes - run your application pods
- role: worker
- role: worker 