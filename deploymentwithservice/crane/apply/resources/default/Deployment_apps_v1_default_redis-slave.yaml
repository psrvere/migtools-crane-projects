apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"redis","component":"slave"},"name":"redis-slave","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"redis","component":"slave"}},"template":{"metadata":{"labels":{"app":"redis","component":"slave"}},"spec":{"containers":[{"command":["redis-server","--slaveof","redis-master","6379"],"image":"redis:6.0.5","name":"slave","ports":[{"containerPort":6379}],"resources":{"limits":{"cpu":"500m","memory":"128Mi"},"requests":{"cpu":"250m","memory":"64Mi"}}}]}}}}
  labels:
    app: redis
    component: slave
  name: redis-slave
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis
      component: slave
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: redis
        component: slave
    spec:
      containers:
      - command:
        - redis-server
        - --slaveof
        - redis-master
        - "6379"
        image: redis:6.0.5
        imagePullPolicy: IfNotPresent
        name: slave
        ports:
        - containerPort: 6379
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
