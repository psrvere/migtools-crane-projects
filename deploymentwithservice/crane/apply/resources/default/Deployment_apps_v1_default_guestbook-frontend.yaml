apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"guestbook","component":"frontend"},"name":"guestbook-frontend","namespace":"default"},"spec":{"replicas":3,"selector":{"matchLabels":{"app":"guestbook","component":"frontend"}},"template":{"metadata":{"labels":{"app":"guestbook","component":"frontend"}},"spec":{"containers":[{"env":[{"name":"GET_HOSTS_FROM","value":"dns"},{"name":"REDIS_MASTER_SERVICE_HOST","value":"redis-master"},{"name":"REDIS_MASTER_SERVICE_PORT","value":"6379"},{"name":"REDIS_SLAVE_SERVICE_HOST","value":"redis-slave"},{"name":"REDIS_SLAVE_SERVICE_PORT","value":"6379"}],"image":"gcr.io/google-samples/gb-frontend:v5","name":"frontend","ports":[{"containerPort":80}],"resources":{"limits":{"cpu":"500m","memory":"128Mi"},"requests":{"cpu":"250m","memory":"64Mi"}}}]}}}}
  labels:
    app: guestbook
    component: frontend
  name: guestbook-frontend
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: guestbook
      component: frontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: guestbook
        component: frontend
    spec:
      containers:
      - env:
        - name: GET_HOSTS_FROM
          value: dns
        - name: REDIS_MASTER_SERVICE_HOST
          value: redis-master
        - name: REDIS_MASTER_SERVICE_PORT
          value: "6379"
        - name: REDIS_SLAVE_SERVICE_HOST
          value: redis-slave
        - name: REDIS_SLAVE_SERVICE_PORT
          value: "6379"
        image: gcr.io/google-samples/gb-frontend:v5
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
