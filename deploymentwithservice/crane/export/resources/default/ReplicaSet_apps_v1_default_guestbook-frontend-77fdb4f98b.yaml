apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "3"
    deployment.kubernetes.io/max-replicas: "4"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-08-06T08:14:25Z"
  generation: 1
  labels:
    app: guestbook
    component: frontend
    pod-template-hash: 77fdb4f98b
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/desired-replicas: {}
          f:deployment.kubernetes.io/max-replicas: {}
          f:deployment.kubernetes.io/revision: {}
        f:labels:
          .: {}
          f:app: {}
          f:component: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"2a283e03-3066-4fef-96e6-f17283d64e33"}: {}
      f:spec:
        f:replicas: {}
        f:selector: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
              f:component: {}
              f:pod-template-hash: {}
          f:spec:
            f:containers:
              k:{"name":"frontend"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"GET_HOSTS_FROM"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REDIS_MASTER_SERVICE_HOST"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REDIS_MASTER_SERVICE_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REDIS_SLAVE_SERVICE_HOST"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REDIS_SLAVE_SERVICE_PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":80,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kube-controller-manager
    operation: Update
    time: "2025-08-06T08:14:25Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:availableReplicas: {}
        f:fullyLabeledReplicas: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2025-08-06T08:14:59Z"
  name: guestbook-frontend-77fdb4f98b
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: guestbook-frontend
    uid: 2a283e03-3066-4fef-96e6-f17283d64e33
  resourceVersion: "2994"
  uid: 2cca0190-95ac-404e-9107-b6898f628cce
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      component: frontend
      pod-template-hash: 77fdb4f98b
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: guestbook
        component: frontend
        pod-template-hash: 77fdb4f98b
    spec:
      containers:
      - env:
        - name: GET_HOSTS_FROM
          value: dns
        - name: REDIS_MASTER_SERVICE_HOST
          value: redis-master
        - name: REDIS_MASTER_SERVICE_PORT
          value: "6379"
        - name: REDIS_SLAVE_SERVICE_HOST
          value: redis-slave
        - name: REDIS_SLAVE_SERVICE_PORT
          value: "6379"
        image: gcr.io/google-samples/gb-frontend:v5
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 3
  fullyLabeledReplicas: 3
  observedGeneration: 1
  readyReplicas: 3
  replicas: 3
