apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "2"
    deployment.kubernetes.io/max-replicas: "3"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-08-06T08:15:08Z"
  generation: 1
  labels:
    app: redis
    component: slave
    pod-template-hash: 5685c985c9
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/desired-replicas: {}
          f:deployment.kubernetes.io/max-replicas: {}
          f:deployment.kubernetes.io/revision: {}
        f:labels:
          .: {}
          f:app: {}
          f:component: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"bc67f746-b673-4545-b086-028974505665"}: {}
      f:spec:
        f:replicas: {}
        f:selector: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
              f:component: {}
              f:pod-template-hash: {}
          f:spec:
            f:containers:
              k:{"name":"slave"}:
                .: {}
                f:command: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":6379,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kube-controller-manager
    operation: Update
    time: "2025-08-06T08:15:08Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:availableReplicas: {}
        f:fullyLabeledReplicas: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2025-08-06T08:15:19Z"
  name: redis-slave-5685c985c9
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: redis-slave
    uid: bc67f746-b673-4545-b086-028974505665
  resourceVersion: "3069"
  uid: 2a1f3a01-eb74-4819-81e6-c479b990de4f
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
      component: slave
      pod-template-hash: 5685c985c9
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: redis
        component: slave
        pod-template-hash: 5685c985c9
    spec:
      containers:
      - command:
        - redis-server
        - --slaveof
        - redis-master
        - "6379"
        image: redis:6.0.5
        imagePullPolicy: IfNotPresent
        name: slave
        ports:
        - containerPort: 6379
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  fullyLabeledReplicas: 2
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
