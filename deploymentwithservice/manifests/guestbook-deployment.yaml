apiVersion: apps/v1
kind: Deployment
metadata:
  name: guestbook-frontend
  namespace: default
  labels:
    app: guestbook
    component: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      component: frontend
  template:
    metadata:
      labels:
        app: guestbook
        component: frontend
    spec:
      containers:
      - name: frontend
        image: gcr.io/google-samples/gb-frontend:v5
        ports:
        - containerPort: 80
        env:
        - name: GET_HOSTS_FROM
          value: "dns"
        - name: REDIS_MASTER_SERVICE_HOST
          value: "redis-master"
        - name: REDIS_MASTER_SERVICE_PORT
          value: "6379"
        - name: REDIS_SLAVE_SERVICE_HOST
          value: "redis-slave"
        - name: REDIS_SLAVE_SERVICE_PORT
          value: "6379"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: default
  labels:
    app: redis
    component: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      component: master
  template:
    metadata:
      labels:
        app: redis
        component: master
    spec:
      containers:
      - name: master
        image: redis:6.0.5
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-slave
  namespace: default
  labels:
    app: redis
    component: slave
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
      component: slave
  template:
    metadata:
      labels:
        app: redis
        component: slave
    spec:
      containers:
      - name: slave
        image: redis:6.0.5
        command: ["redis-server", "--slaveof", "redis-master", "6379"]
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m" 